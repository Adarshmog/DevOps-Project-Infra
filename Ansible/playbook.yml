---
- name: Setup DevOps Environment (Java, Maven, Node.js, Docker, Kubernetes)
  hosts: web
  become: yes
  tasks:
    # ------------------------------
    # Update System Packages
    # ------------------------------
    - name: Update apt repository
      apt:
        update_cache: yes
        cache_valid_time: 3600

    # ------------------------------
    # Install Java 11
    # ------------------------------
    - name: Install Java 11
      apt:
        name: openjdk-11-jdk
        state: present

    - name: Verify Java installation
      command: java -version
      register: java_output
      ignore_errors: true

    - debug:
        msg: "{{ java_output.stderr_lines }}"

    # ------------------------------
    # Install Maven
    # ------------------------------
    - name: Install Maven
      apt:
        name: maven
        state: present

    - name: Verify Maven installation
      command: mvn -version
      register: mvn_output
      ignore_errors: true

    - debug:
        msg: "{{ mvn_output.stdout_lines }}"

    # ------------------------------
    # Install Node.js and npm
    # ------------------------------
    - name: Check if Node.js is already installed
      ansible.builtin.command: node -v
      register: node_check
      ignore_errors: true

    - name: Add Node.js 18.x repository (only if not installed)
      ansible.builtin.shell: |
        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
      when: node_check.rc != 0
      args:
        warn: false

    - name: Install Node.js and npm
      ansible.builtin.apt:
        name: nodejs
        state: present
        update_cache: yes

    - name: Verify Node.js installation
      ansible.builtin.command: node -v
      register: node_output
      ignore_errors: true

    - name: Verify npm installation
      ansible.builtin.command: npm -v
      register: npm_output
      ignore_errors: true

    - name: Display Node.js and npm versions
      ansible.builtin.debug:
        msg:
          - "Node.js version: {{ node_output.stdout }}"
          - "npm version: {{ npm_output.stdout }}"

    # ------------------------------
    # Install Docker
    # ------------------------------
    - name: Install required packages for Docker
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      ansible.builtin.shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg

    - name: Add Docker repository
      ansible.builtin.shell: |
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Install Docker engine
      apt:
        update_cache: yes
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure Docker is running
      service:
        name: docker
        state: started
        enabled: yes

    # ------------------------------
    # Install Kubernetes Components
    # ------------------------------
    - name: Add Kubernetes APT repository
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list

    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold Kubernetes packages to prevent automatic updates
      ansible.builtin.shell: |
        apt-mark hold kubelet kubeadm kubectl

    - name: Enable kubelet service
      systemd:
        name: kubelet
        enabled: yes
        state: started

    # ------------------------------
    # Final Verification
    # ------------------------------
    - name: Display installed versions
      shell: |
        echo "Java version:"; java -version
        echo "Maven version:"; mvn -version
        echo "Node.js version:"; node -v
        echo "npm version:"; npm -v
        echo "Docker version:"; docker --version
        echo "Kubelet version:"; kubelet --version
        echo "Kubectl version:"; kubectl version --client
        echo "Kubeadm version:"; kubeadm version
      register: versions

    - debug:
        msg: "{{ versions.stdout_lines }}"


